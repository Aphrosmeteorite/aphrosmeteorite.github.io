<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>C++ on lap的小站</title><link>https://laplace825.github.io/categories/c++/</link><description>Recent content in C++ on lap的小站</description><generator>Hugo</generator><language>zh-CN</language><lastBuildDate>Sun, 16 Jun 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://laplace825.github.io/categories/c++/rss.xml" rel="self" type="application/rss+xml"/><item><title>C++变参模版</title><link>https://laplace825.github.io/post/cpp-variadic-template/</link><pubDate>Sun, 16 Jun 2024 00:00:00 +0000</pubDate><guid>https://laplace825.github.io/post/cpp-variadic-template/</guid><description>&lt;p>这章属于是重点了，而且感觉还挺难掌握各种用法的，不过也是让我感觉魔法的开始✨。&lt;/p></description></item><item><title>C++非类型模版参数</title><link>https://laplace825.github.io/post/cpp-no-type-param-template/</link><pubDate>Sat, 15 Jun 2024 00:00:00 +0000</pubDate><guid>https://laplace825.github.io/post/cpp-no-type-param-template/</guid><description>&lt;p>非类型模板参数其实说来也简单，也就是在&lt;code>template&lt;/code>中将&lt;code>typename&lt;/code>换成具体的类型。但是还是有诸多限制和使用方式的。👍&lt;/p></description></item><item><title>C++类模版</title><link>https://laplace825.github.io/post/cpp-class-template/</link><pubDate>Fri, 14 Jun 2024 00:00:00 +0000</pubDate><guid>https://laplace825.github.io/post/cpp-class-template/</guid><description>&lt;p>继续开新坑了♿，&lt;code>C++&lt;/code> 模版元编程。作为一个记录笔记吧。如有错误，也请原谅QAQ，代码都是用&lt;code>msvc clang&lt;/code>编译跑通。&lt;/p></description></item><item><title>最近遇到的一些坑(C++)</title><link>https://laplace825.github.io/post/some-pitfalls-encountered-1/</link><pubDate>Wed, 28 Feb 2024 00:00:00 +0000</pubDate><guid>https://laplace825.github.io/post/some-pitfalls-encountered-1/</guid><description>&lt;p>最近写一个多项式类希望尽可能使用&lt;code>Modern C++&lt;/code>，但是在使用过程中遇到了一些坑，记录如下：&lt;/p></description></item><item><title>一个设计让你的C++只需要一个赋值运算符！</title><link>https://laplace825.github.io/post/exception-cpp/</link><pubDate>Tue, 20 Feb 2024 00:00:00 +0000</pubDate><guid>https://laplace825.github.io/post/exception-cpp/</guid><description>&lt;p>&lt;del>希望没有标题党的意思&lt;/del>,一个有趣且巧妙的设计,可以让一些类只需要两个构造函数,而我们只需要额外增加的只有&lt;code>swap&lt;/code>和&lt;code>copy&lt;/code>&lt;/p></description></item><item><title>关于我的计算机中的发现——小端存储</title><link>https://laplace825.github.io/post/find-mycomputer/</link><pubDate>Thu, 15 Feb 2024 00:00:00 +0000</pubDate><guid>https://laplace825.github.io/post/find-mycomputer/</guid><description>&lt;p>最近尝试&lt;code>reinterpret_cast&lt;/code>时发现验证了一些计算机组成原理中内存相关的存储方式，不过也只是一些小玩意罢了。&lt;/p></description></item><item><title>CMake链接OpenCV(补档)</title><link>https://laplace825.github.io/post/cmake2/</link><pubDate>Tue, 13 Feb 2024 00:00:00 +0000</pubDate><guid>https://laplace825.github.io/post/cmake2/</guid><description>&lt;p>使用&lt;code>CMake&lt;/code>链接&lt;code>OpenCV&lt;/code>实际上不需要直接指定绝对路径，本文主要是记录&lt;code>OpenCV&lt;/code>更合理的配置。&lt;/p></description></item><item><title>Windows下CMake链接库</title><link>https://laplace825.github.io/post/cmake1/</link><pubDate>Sun, 11 Feb 2024 00:00:00 +0000</pubDate><guid>https://laplace825.github.io/post/cmake1/</guid><description>&lt;p>如何在&lt;code>VScode&lt;/code>中使用&lt;code>CMake&lt;/code>链接库，主要是静态库，动态库在&lt;code>Windows&lt;/code>中直接放在&lt;code>exe&lt;/code>同目录。&lt;/p></description></item><item><title>C++移动语义(补充)</title><link>https://laplace825.github.io/post/cppmove_2/</link><pubDate>Sun, 31 Dec 2023 00:00:00 +0000</pubDate><guid>https://laplace825.github.io/post/cppmove_2/</guid><description>&lt;p>对之前移动语义的部分补充，主要是关于&lt;code>std::move&lt;/code>的实现&lt;/p></description></item><item><title>关于C++中使用using替代typedef</title><link>https://laplace825.github.io/post/cppusing/</link><pubDate>Mon, 25 Dec 2023 00:00:00 +0000</pubDate><guid>https://laplace825.github.io/post/cppusing/</guid><description>&lt;p>很久没有更新博客了🫠，主要是(&lt;del>懒&lt;/del>)学业繁忙，继续写点&lt;code>C++&lt;/code>相关吧。&lt;/p></description></item><item><title>C++移动语义</title><link>https://laplace825.github.io/post/cppmove/</link><pubDate>Sat, 28 Oct 2023 00:00:00 +0000</pubDate><guid>https://laplace825.github.io/post/cppmove/</guid><description>&lt;p>最近看了一点移动语义，写一点学习内容吧&lt;/p></description></item><item><title>关于C++中如何检测中文字符串</title><link>https://laplace825.github.io/post/cppchinesechar/</link><pubDate>Fri, 06 Oct 2023 00:00:00 +0000</pubDate><guid>https://laplace825.github.io/post/cppchinesechar/</guid><description>&lt;p>最近遇见需要处理中文字符串的问题，记录一下处理方法。&lt;/p></description></item></channel></rss>